Название идеи: "Графический построитель бизнес-процессов для АСУП", под АСУП я в данном случае понимаю "Автоматизированная система управления предприятием".
Суть идеи.
Система должна предоставлять возможность визуального построения графа переходов между состояниями некого бизнес-процесса согласно концепции BPM. 
Графом в данном случае будет являться шаблон сценария некого бизнес-процесса (для примера во время показа в специальном графическом построителе будет построен бизнес-процесс согласования договоров и, например, бизнес-процесс обработки обращения в тех. поддержку предприятия). 
Состояния бизнес-процесса - это будут блоки сценария. К сценарию прикрепляется некий электронный документ (для примера будет взят документ MS Word с текстом шаблона типового договора и ещё один документ с текстом шаблона обращения в отдел тех. поддержки, соответственно). 
За каждым блоком сценария закрепляется один или несколько пользователей системы (пользователи будут введены заблаговременно без предоставления инструмента по их добавлению/редактированию/удалению, чтобы не концентрироваться на этом моменте и чтобы не раздувать и без того непростую задачу).
Далее.
Есть экранная форма, на которой можно загрузить файл договора, выбрать шаблон сценария и нажать кнопку "Старт". 
После этого начинается выполнение сценария. Т.е. cron с заданной периодичностью запускает так называемый "оркестратор" - механизм выполнения запущенных сценариев.
Сценарии выполняются от блока к блоку. Пользователи, закреплённые за текущим блоком, получают в свои "Входящие задания" задание на выполнение.
Предполагается, что соответствующий пользователь ознакамливается с документом и принимает решение, т.е. выбирает из выпадающего списка результат выполнения и нажимает кнопку "Готово".
После этого выполнение сценария переходит к следующему блоку сценария и уже следующий пользователь(ли) получает задание на выполнение. И т.д. до конечного блока сценария.
Должны поддерживаться 4 типа блоков сценария: начальный, конечный, интерактивные и условные.
Начальный блок - блок начала выполнения сценария, создаётся автоматически при создании нового шаблона сценария.
Конечный блок - блок окончания выполнения сценария, создаётся автоматически при создании нового шаблона сценария.
Интерактивные блоки - это блоки сценария, предназначенные для взаимодействия с пользователями системы для выполнения заданий согласно выстроенному сценарию.
Условные блоки - это блоки сценария, в которых закладывается логика проверки результата выполнения предыдущего блока сценария и которые предназначены для построения разветвлённых сценариев. 
Т.е., в зависимости от выбранного результата выполнения в текущем блоке сценария система (оркестратор) принимает решение по какой из веток сценария продолжится выполнение.
Выполнение любого сценария заканчивается, когда управление передаётся в конечный блок сценария.
Также должна быть предусмотрена экранная форма с перечнем запущенных в данный момент сценариев, в которой можно посмотреть, кликнув на одном из сценариев, на каком блоке в данный момент остановилось выполнение данного сценария и какие блоки сценария уже выполнились.
При этом соответствующие блоки подкрашиваются определённым цветом: голубым - текущий выполняющийся блок, зелёным - выполненные блоки.

Со стороны Durandal надо сделать:
1. Рабочий кабинет (или раб. стол, называть можем как-угодно) пользователя.
2. Содержимое рабочего кабинета должно зависеть от роли пользователя:
    администратор или зарегистрированный пользователь.
Я сделаю демку авторизации разных пользователей с разными ролями, а ты пока просто сделай заглушки, т.е. отдельно вид рабочего кабинета для админа и отдельно для обычного пользователя.
3. У админа должна быть ссылка "Шаблоны сценариев".
 По переходу на эту ссылку должна открываться View с перечнем уже настроенных шаблонов сценариев и кнопочкой/ссылкой "Создать шаблон сценария".
 Соответственно, должна быть возможность отредактировать уже настроенные сценарии.
Я готовлю сам построитель шаблонов сценариев, он будет принимать на вход шаблон сценария в виде json-строки и с ним работать.
Потом в построителе типа нажимаешь кнопку "Сохранить" и шаблон сценария сериализуется обратно в json-строку и сохраняется в CouchDB.
 Потом мы вызов этого построителя просто всунем в эту View, которую ты сделаешь (пока в ней сделай заглушки на создание и редактирование шаблона сценария).
 Но, чтобы тебе уже показывать какой-то перечнь шаблонов сценариев, создай в CouchDB несколько документов с полем "Сценарий" и признаком "Шаблон сценария" и выводи этот список.
 А потом построитель будет сохранять в поле "Сценарий" вот эту json-строку.
4. У обычного пользователя должна быть ссылка "Запустить сценарий".
	После перехода по ней он видит выпадающий список доступных шаблонов сценариев, поле типа File для прикрепления Word-овского документа и кнопку "Принять".
	 Вот тут должен будет создасться процесс, соответствующий выбранному сценарию, т.е. начинает отрабатывать движок сценариев.
	 Я в принципе знаю как написать код движка, но на JS я его ещё не писал, но хочу попробовать. :) Т.е. ты пока ставишь заглушку на кнопку "Принять", а потом мы добавим туда ajax-вызов, который по сути дёрнет серверный JS-скрипт, лежащий в CouchDB (такое есть, надо просто почитать об этом подробнее).
5. Также у обычного пользователя должна быть ссылка "Мои сценарии", по которой должен открываться перечень уже запущенных от его имени сценариев.
Должна быть возможность кликнуть на любой запущенный сценарий и в построителе посмотреть ход его выполнения (я планирую, что построитель, который я делаю, будет иметь режим Readonly и возможность подкрашивать разными цветами выполненные, выполняющиеся и не выполненные блоки сценария).
 Но ты пока сделай тут заглушку.
6. Также у пользователя должна быть ссылка "Входящие задания", по переходу в которую должен показываться список заданий, которые пришли на него. Каждое такое задание по сути соответствует блоку в запущенном сценарии. Пользователь должен клинуть на задание и перейти во View в котором он увидит Word-овский файл, который был прикреплён к сценарию в момент его запуска, выпадающий список "Принятие решения" с выбором вариантов типа: "Согласовал", "Отклонил" и кнопку "Принять". После этого текущий блок сценария помечается как выполненный и сценарий переходит к следующему блоку, т.е. уже другой пользователь получит очередное задание на отработку. И т.д.
7. Как только закончишь эти работы, я думаю, что подгоню демку с авторизацией пользователей и ты перенесёшь это в проект и доведёшь до ума, чтобы пользователи могли нормально авторизоваться и видеть то, что им позволено согласно роли.
8. Ну и, соответственно, на тебя ложится вся оформительская часть. Т.е. веб-приложение должно выглядеть однозначно как SPA-приложение, сделанное на Durandal и выглядеть красиво. :)
9. Если я буду видеть, что зашиваюсь с построителем шаблонов сценариев и/или движком сценариев, то буду делить свою часть ещё на части и просить помощи у тебя, если ты не против. :)

Если у тебя остаются вопросы в плане "А как всё это хотя бы примерно должно выглядеть", то можем поступить так. Можешь взять любой построитель прототипов дизайна сайта(есть же такие и онлайн, в принципе) и набросать примерно своё видение, т.е. как ты это всё понял. А потом просто согласуем.